import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id "java-library"
    id "com.github.johnrengelman.shadow" version "7.1.0"
    id "maven-publish"
}

group "xyz.oribuin"
version "1.3.2"

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

compileJava {
    options.compilerArgs += ['-parameters']
    options.fork = true
    options.encoding = 'UTF-8'
}

repositories {
    mavenCentral()
    mavenLocal()

    maven { url = "https://libraries.minecraft.net" }
    maven { url = "https://repo.papermc.io/repository/maven-public/" }
    maven { url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/" }
    maven { url = "https://repo.rosewooddev.io/repository/public/" }
    maven { url = "https://repo.extendedclip.com/content/repositories/placeholderapi/" }
    maven { url = "https://repo.codemc.org/repository/maven-public/" }
    maven { url = "https://jitpack.io" }
    maven { url = "https://repo.mattstudios.me/artifactory/public/" }

}

dependencies {
    // General Dependencies
    compileOnly 'io.papermc.paper:paper-api:1.20.1-R0.1-SNAPSHOT'
    compileOnly 'org.jetbrains:annotations:23.0.0'

    // Plugins
    compileOnly 'com.github.MilkBowl:VaultAPI:1.7'
    compileOnly 'me.clip:placeholderapi:2.11.3'
    compileOnly 'com.arcaniax:HeadDatabase-API:1.3.1', {
        exclude group: 'org.spigotmc'
    }

    // Mojang dependencies
    compileOnly 'com.mojang:authlib:1.5.21'
//    compileOnly 'net.kyori:adventure-text-minimessage:4.14.0'

    // Frameworks & APIs
    api('dev.rosewood:rosegarden:1.3.2')
    api('dev.triumphteam:triumph-gui:3.1.7') {  // https://mf.mattstudios.me/triumph-gui/introduction
        exclude group: "com.google.code.gson", module: "gson" // Remove GSON, Already included in spigot api
        exclude group: "net.kyori", module: "*" // Remove kyori, we're using plugin.yml libraries
    }
}


shadowJar {
    archiveClassifier.set(null)

    relocate("dev.rosewood.rosegarden", "${project.group}.eternaltags.libs.rosegarden")
    relocate("dev.triumphteam.gui", "${project.group}.eternaltags.libs.gui")
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        include '**/*.yml'
        filter ReplaceTokens, tokens: ["version": project.property("version")]
        duplicatesStrategy DuplicatesStrategy.INCLUDE
    }
}

publishing {
    publications {
        shadow(MavenPublication) { publication ->
            project.shadow.component(publication)
            artifactId = 'eternaltags'
            pom {
                name = 'eternaltags'
            }
        }
    }
    repositories {
        if (project.hasProperty('mavenUser') && project.hasProperty('mavenPassword')) {
            maven {
                credentials {
                    username project.mavenUser
                    password project.mavenPassword
                }

                def releasesRepoUrl = 'https://repo.rosewooddev.io/repository/public-releases/'
                def snapshotsRepoUrl = 'https://repo.rosewooddev.io/repository/public-snapshots/'
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            }
        }
    }
}

build.dependsOn shadowJar